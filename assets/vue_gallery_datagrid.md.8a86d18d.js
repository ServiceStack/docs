import"./chunks/iconify.34bef1f3.js";import{_ as v}from"./chunks/ApiReference.ad9ce394.js";import{f as w,b as T,t as i}from"./chunks/data.46ce6d4e.js";import{f as b,C as d,o as h,M as f,q as s,b as a,A as k,u as p,d as t,r as D,R as S,L as x,c as C,e as n,a as c}from"./app.5c693fe4.js";import{m as A}from"./chunks/metadata.54494a71.js";import{F as I}from"./chunks/formatters.9a02089b.js";const B=t("span",{class:"text-indigo-600"},"Date",-1),E=b({__name:"Custom",setup(y){return(g,m)=>{const _=d("DataGrid");return h(),f(_,{items:p(w),class:"max-w-screen-md",tableStyle:["stripedRows","uppercaseHeadings"],"header-titles":{temperatureC:"TEMP. (C)",temperatureF:"TEMP. (F)"}},{"date-header":s(()=>[B]),date:s(({date:e})=>[a(k(new Intl.DateTimeFormat().format(new Date(e))),1)]),temperatureC:s(({temperatureC:e})=>[a(k(e)+"\xB0 ",1)]),temperatureF:s(({temperatureF:e})=>[a(k(e)+"\xB0 ",1)]),summary:s(({summary:e})=>[a(k(e),1)]),_:1},8,["items","header-titles"])}}}),P={class:"text-gray-900"},G=t("span",{class:"hidden lg:inline"},"Room ",-1),N=t("span",{class:"hidden lg:inline"}," Date",-1),V=t("span",{class:"hidden lg:inline"}," Date",-1),R=b({__name:"Responsive",setup(y){const{currency:g}=S(),m=D();function _(u){console.log("headerSelected",u)}function e(u){m.value=m.value===u.id?null:u.id,console.log("rowSelected",u)}return(u,o)=>{const r=d("DataGrid");return h(),f(r,{items:p(T),"visible-from":{name:"xl",bookingStartDate:"sm",bookingEndDate:"xl"},onHeaderSelected:_,onRowSelected:e,"is-selected":l=>m.value==l.id},{id:s(({id:l})=>[t("span",P,k(l),1)]),name:s(({name:l})=>[a(k(l),1)]),"roomNumber-header":s(()=>[G,a("No ")]),cost:s(({cost:l})=>[a(k(p(g)(l)),1)]),"bookingStartDate-header":s(()=>[a(" Start"),N]),"bookingEndDate-header":s(()=>[a(" End"),V]),"createdBy-header":s(()=>[a(" Employee ")]),createdBy:s(({createdBy:l})=>[a(k(l),1)]),_:1},8,["items","is-selected"])}}});var q=[{id:1,name:"First Booking!",roomType:"Queen",roomNumber:10,bookingStartDate:"/Date(1670620983771-0000)/",bookingEndDate:"/Date(1671225783771-0000)/",cost:100},{id:2,name:"Booking 2",roomType:"Double",roomNumber:12,bookingStartDate:"/Date(1670793783778-0000)/",bookingEndDate:"/Date(1671398583778-0000)/",cost:120},{id:3,name:"Booking the 3rd",roomType:"Suite",roomNumber:13,bookingStartDate:"/Date(1670880183778-0000)/",bookingEndDate:"/Date(1671484983778-0000)/",cost:130}];const F=t("link",{rel:"stylesheet",href:"/css/tailwind-components.css"},null,-1),L=c(`<p class="mb-4 text-lg"> In its most simple usage the DataGrid component can be used to render typed collections: </p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DataGrid</span> <span class="token attr-name">:items</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tracks<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">const</span> tracks <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token function">track</span><span class="token punctuation">(</span><span class="token string">&quot;Everythings Ruined&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Faith No More&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Angel Dust&quot;</span><span class="token punctuation">,</span> <span class="token number">1992</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">track</span><span class="token punctuation">(</span><span class="token string">&quot;Lightning Crashes&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Live&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Throwing Copper&quot;</span><span class="token punctuation">,</span> <span class="token number">1994</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">track</span><span class="token punctuation">(</span><span class="token string">&quot;Heart-Shaped Box&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Nirvana&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;In Utero&quot;</span><span class="token punctuation">,</span> <span class="token number">1993</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">track</span><span class="token punctuation">(</span><span class="token string">&quot;Alive&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Pearl Jam&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Ten&quot;</span><span class="token punctuation">,</span> <span class="token number">1991</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p class="mb-4 text-lg"> Which by default will display all object properties: </p>`,3),H=c(`<h2 class="pt-8 mb-4 text-2xl font-semibold text-gray-900 dark:text-gray-100"> Simple Customizations </h2><p class="mb-4 text-lg"> Which columns are shown and how they&#39;re rendered is customizable with custom <code>&lt;template #column&gt;</code> definitions: </p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DataGrid</span> <span class="token attr-name">:items</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>forecasts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>max-w-screen-md<span class="token punctuation">&quot;</span></span> <span class="token attr-name">::tableStyle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[&#39;stripedRows&#39;,&#39;uppercaseHeadings&#39;]<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">:header-titles</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ temperatureC:&#39;TEMP. (C)&#39;, temperatureF:&#39;TEMP. (F)&#39; }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#date-header</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-indigo-600<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Date<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#date</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ date }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        {{ new Intl.DateTimeFormat().format(new Date(date)) }}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#temperatureC</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ temperatureC }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        {{ temperatureC }}<span class="token entity named-entity" title="\xB0">&amp;deg;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#temperatureF</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ temperatureF }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        {{ temperatureF }}<span class="token entity named-entity" title="\xB0">&amp;deg;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#summary</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ summary }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ summary }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DataGrid</span><span class="token punctuation">&gt;</span></span>

</code></pre></div>`,3),M=c(`<p class="my-4 text-lg"> Column names can be changed with a <b>header-titles</b> alias mapping, or dynamically with a <b>header-title</b> mapping function. </p><p class="my-4 text-lg"> Alternatively for more advanced customizations, custom <code>&lt;template #column-header&gt;</code> definitions can be used to control how column headers are rendered. </p><p class="my-4 text-lg"> If any custom column or header definitions are provided, only those columns will be displayed. Alternatively specify an explicit array of column names in <b>selected-columns</b> to control the number and order or columns displayed. </p><h2 class="pt-8 mb-4 text-2xl font-semibold text-gray-900 dark:text-gray-100"> Responsive </h2><p class="mb-4 text-lg"> A more advanced example showing how to implement a responsive datagrid defining what columns and Headers are visible at different screen sizes using <b>visible-from</b> to specify which columns to show from different Tailwind responsive breakpoints and <code>&lt;template #column-header&gt;</code> definitions to collapse column names at small screen sizes: </p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DataGrid</span> <span class="token attr-name">:items</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bookings<span class="token punctuation">&quot;</span></span> 
      <span class="token attr-name">:visible-from</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ name:&#39;xl&#39;, bookingStartDate:&#39;sm&#39;, bookingEndDate:&#39;xl&#39; }<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">@header-selected</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>headerSelected<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">@row-selected</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rowSelected<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:is-selected</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>row =&gt; selected == row.id<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ id }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-gray-900<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ id }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
    
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ name }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        {{ name }}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
    
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#roomNumber-header</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden lg:inline<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Room <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>No
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#cost</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ cost }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ currency(cost) }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
    
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#bookingStartDate-header</span><span class="token punctuation">&gt;</span></span>
        Start<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden lg:inline<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> Date<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
    
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#bookingEndDate-header</span><span class="token punctuation">&gt;</span></span>
        End<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden lg:inline<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> Date<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#createdBy-header</span><span class="token punctuation">&gt;</span></span>
        Employee
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#createdBy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ createdBy }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ createdBy }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DataGrid</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useFormatters <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@servicestack/vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> bookings <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../data&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Booking <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../dtos&#39;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> currency <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useFormatters</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> selected <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">headerSelected</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">column</span><span class="token operator">:</span>string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;headerSelected&#39;</span><span class="token punctuation">,</span>column<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">rowSelected</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">row</span><span class="token operator">:</span>Booking</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    selected<span class="token punctuation">.</span>value <span class="token operator">=</span> selected<span class="token punctuation">.</span>value <span class="token operator">===</span> row<span class="token punctuation">.</span>id <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> row<span class="token punctuation">.</span>id
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;rowSelected&#39;</span><span class="token punctuation">,</span> row<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>`,6),W=t("p",{class:"my-4 text-lg"},[a(" Behavior of the DataGrid can be customized with the "),t("code",null,"@header-selected"),a(" event to handle when column headers are selected to apply custom filtering to the "),t("b",null,"items"),a(" data source whilst the "),t("code",null,"@row-selected"),a(" event can be used to apply custom behavior when a row is selected. ")],-1),z=t("h2",{id:"table-styles",class:"mt-8 mb-4 text-2xl font-semibold text-gray-900 dark:text-gray-100"}," Table Styles ",-1),$={class:"mb-4 text-lg"},U=t("b",null,"tableStyles",-1),j=c(`<h3 class="my-4 text-lg font-semibold">Default (Striped Rows)</h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DataGrid</span> <span class="token attr-name">:items</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tracks<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div>`,2),O=c(`<h3 class="my-4 text-lg font-semibold">Simple</h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DataGrid</span> <span class="token attr-name">:items</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tracks<span class="token punctuation">&quot;</span></span> <span class="token attr-name">tableStyle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>simple<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div>`,2),J=c(`<h3 class="my-4 text-lg font-semibold">Uppercase Headings</h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DataGrid</span> <span class="token attr-name">:items</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tracks<span class="token punctuation">&quot;</span></span> <span class="token attr-name">tableStyle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>uppercaseHeadings<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div>`,2),K=c(`<h3 class="my-4 text-lg font-semibold">Vertical Lines</h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DataGrid</span> <span class="token attr-name">:items</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tracks<span class="token punctuation">&quot;</span></span> <span class="token attr-name">tableStyle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>verticalLines<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div>`,2),Q=c(`<h3 class="my-4 text-lg font-semibold">White Background</h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DataGrid</span> <span class="token attr-name">:items</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tracks<span class="token punctuation">&quot;</span></span> <span class="token attr-name">tableStyle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>whiteBackground<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div>`,2),X=c(`<h3 class="my-4 text-lg font-semibold">Full Width</h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DataGrid</span> <span class="token attr-name">:items</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tracks<span class="token punctuation">&quot;</span></span> <span class="token attr-name">tableStyle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fullWidth<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div>`,2),Y=c(`<h3 class="my-4 text-lg font-semibold">Full Width, Uppercase with Vertical Lines</h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DataGrid</span> <span class="token attr-name">:items</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tracks<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:tableStyle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[&#39;uppercaseHeadings&#39;, &#39;fullWidth&#39;, &#39;verticalLines&#39;]<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div>`,2),Z=t("h2",{id:"app-metadata",class:"mt-8 mb-4 text-2xl font-semibold text-gray-900 dark:text-gray-100"}," Using App Metadata ",-1),aa=t("p",{class:"my-4 text-lg"}," By default DataGrid will render values using its default configured formatters, so results with strings, numbers and defaults will display a stock standard resultset: ",-1),na=c(`<p class="my-4 text-lg"> Another option for formatting this dataset is to use the rich <a href="/locode/formatters">format functions</a> in ServiceStack to annotate the DTOs with how each field should be formatted, e.g: </p><div class="language-csharp"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Booking</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">AutoIncrement</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">RoomType</span> RoomType <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> RoomNumber <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">IntlDateTime</span><span class="token attribute-arguments"><span class="token punctuation">(</span>DateStyle<span class="token punctuation">.</span>Long<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime</span> BookingStartDate <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">IntlRelativeTime</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime<span class="token punctuation">?</span></span> BookingEndDate <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">IntlNumber</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Currency <span class="token operator">=</span> NumberCurrency<span class="token punctuation">.</span>USD<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">decimal</span></span> Cost <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p class="my-4 text-lg"> Which can be enabled by specifying the <code>MetadataType</code> for the DataGrid&#39;s results in <b>type</b>: </p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DataGrid</span> <span class="token attr-name">:items</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bookings<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Booking<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div>`,4),sa={class:"my-4 text-lg"},ia='{"title":"DataGrid Component","description":"","frontmatter":{"title":"DataGrid Component"},"headers":[],"relativePath":"vue/gallery/datagrid.md"}',ta={},ka=Object.assign(ta,{__name:"datagrid",setup(y){const{setMetadata:g}=x();return g(A),(m,_)=>{const e=d("Breadcrumb"),u=d("Breadcrumbs"),o=d("DataGrid"),r=d("TextLink");return h(),C("div",null,[F,t("div",null,[n(u,{class:"mt-4","home-href":"/vue/"},{default:s(()=>[n(e,{href:"/vue/gallery/"},{default:s(()=>[a("gallery")]),_:1}),n(e,null,{default:s(()=>[a("DataGrid Examples")]),_:1})]),_:1}),n(v,{class:"pt-8",Component:"DataGrid<Model>"},{default:s(()=>[a("Default")]),_:1}),L,n(o,{items:p(i)},null,8,["items"]),H,n(E),M,n(R),W,n(p(I)),t("p",null,[a("The "),n(r,{href:"/vue/gallery/formats"},{default:s(()=>[a("PreviewFormat")]),_:1}),a(" component also offers a variety of flexible formatting options.")]),z,t("p",$,[a(" The appearance of DataGrids can use "),U,a(" to change to different "),n(r,{href:"https://tailwindui.com/components/application-ui/lists/tables"},{default:s(()=>[a("Tailwind Table Styles")]),_:1}),a(", e.g: ")]),j,n(o,{items:p(i)},null,8,["items"]),O,n(o,{items:p(i),tableStyle:"simple"},null,8,["items"]),J,n(o,{items:p(i),tableStyle:"uppercaseHeadings"},null,8,["items"]),K,n(o,{items:p(i),tableStyle:"verticalLines"},null,8,["items"]),Q,n(o,{items:p(i),tableStyle:"whiteBackground"},null,8,["items"]),X,n(o,{items:p(i),tableStyle:"fullWidth"},null,8,["items"]),Y,n(o,{items:p(i),tableStyle:["uppercaseHeadings","fullWidth","verticalLines"]},null,8,["items"]),Z,aa,n(o,{items:p(q)},null,8,["items"]),na,n(o,{items:p(q),type:"Booking"},null,8,["items"]),t("p",sa,[a(" Declaratively annotating your DTOs with preferred formatting hints makes this rich metadata information available to clients where it's used to enhance ServiceStack's built-in UI's and Components like "),n(r,{href:"/api-explorer"},{default:s(()=>[a("API Explorer")]),_:1}),a(", "),n(r,{href:"/locode/"},{default:s(()=>[a("Locode")]),_:1}),a(" and "),n(r,{href:"/templates-blazor-components"},{default:s(()=>[a("Blazor Tailwind Components")]),_:1}),a(". ")])])])}}});export{ia as __pageData,ka as default};
