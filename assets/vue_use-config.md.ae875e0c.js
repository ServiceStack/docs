import"./chunks/iconify.ee01da0e.js";import{_ as c}from"./chunks/ApiReference.92b94704.js";import{D as t,o as l,c as r,e as n,q as s,d as i,a as e,b as o}from"./app.902f281a.js";const u=i("link",{rel:"stylesheet",href:"/css/tailwind-components.css"},null,-1),k=e(`<h2 id="formatters" class="mt-8 mb-4 text-2xl font-semibold text-gray-900 dark:text-gray-100"> Manage Global Configuration </h2><p><code>useConfig</code> is used to maintain global configuration that&#39;s used throughout the Vue Component Library.</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@servicestack/vue&quot;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span>
    config<span class="token punctuation">,</span>               <span class="token comment">// Resolve configuration in a reactive Ref&lt;UiConfig&gt;</span>
    setConfig<span class="token punctuation">,</span>            <span class="token comment">// Set global configuration</span>
    assetsPathResolver<span class="token punctuation">,</span>   <span class="token comment">// Resolve Absolute URL to use for relative paths</span>
    fallbackPathResolver<span class="token punctuation">,</span> <span class="token comment">// Resolve fallback URL to use if primary URL fails</span>
<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><p>The asset and fallback URL resolvers are useful when hosting assets on a separate CDN from the hosted website.</p><h3 class="my-4 text-lg font-semibold">Default configuration</h3><div class="language-js"><pre><code><span class="token function">setConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">redirectSignIn</span><span class="token operator">:</span>       <span class="token string">&#39;/signin&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">assetsPathResolver</span><span class="token operator">:</span>   <span class="token parameter">src</span> <span class="token operator">=&gt;</span> src<span class="token punctuation">,</span>
    <span class="token function-variable function">fallbackPathResolver</span><span class="token operator">:</span> <span class="token parameter">src</span> <span class="token operator">=&gt;</span> src<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div>`,6),f=e(`<p>TypeScript definition of the API surface area and type information for correct usage of <code>useConfig()</code></p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">UiConfig</span> <span class="token punctuation">{</span>
    redirectSignIn<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
    assetsPathResolver<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>src<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span>
    fallbackPathResolver<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>src<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token comment">/** Resolve configuration in a reactive Ref&lt;UiConfig&gt; */</span>
<span class="token keyword">const</span> config<span class="token operator">:</span>ComputedRef<span class="token operator">&lt;</span>UiConfig<span class="token operator">&gt;</span>

<span class="token comment">/** Set global configuration */</span>
<span class="token keyword">function</span> <span class="token function">setConfig</span><span class="token punctuation">(</span>config<span class="token operator">:</span> UiConfig<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>

<span class="token comment">/** Resolve Absolute URL to use for relative paths */</span>
<span class="token keyword">function</span> <span class="token function">assetsPathResolver</span><span class="token punctuation">(</span>src<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>

<span class="token comment">/** Resolve fallback URL to use if primary URL fails */</span>
<span class="token keyword">function</span> <span class="token function">fallbackPathResolver</span><span class="token punctuation">(</span>src<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
</code></pre></div>`,2),y='{"title":"Vue Tailwind Global Configuration","description":"","frontmatter":{"title":"Vue Tailwind Global Configuration"},"headers":[],"relativePath":"vue/use-config.md"}',d={},R=Object.assign(d,{__name:"use-config",setup(g){return(m,_)=>{const a=t("Breadcrumb"),p=t("Breadcrumbs");return l(),r("div",null,[u,n(p,{class:"not-prose my-4 mb-8","home-href":"/vue/"},{default:s(()=>[n(a,{href:"/vue/gallery/"},{default:s(()=>[o("gallery")]),_:1}),n(a,null,{default:s(()=>[o("useConfig")]),_:1})]),_:1}),k,n(c,{component:"TypeScript Definition"}),f])}}});export{y as __pageData,R as default};
