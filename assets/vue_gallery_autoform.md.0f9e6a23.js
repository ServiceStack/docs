import{I as x}from"./chunks/iconify.2fedd2da.js";import{A as h,b as A}from"./chunks/data.470146cc.js";import{f as T,L as b,N as B,r as v,i as F,C as u,u as r,o as f,c as w,d as s,e as a,E as q,q as p,b as n,H as C,B as S,a as d}from"./app.892e7bed.js";import{m as R}from"./chunks/metadata.54494a71.js";class V{constructor(t){Object.assign(this,t)}}class D extends V{constructor(t){super(t),Object.assign(this,t)}}class I{constructor(t){Object.assign(this,t)}}class P{constructor(t){Object.assign(this,t)}}class E{constructor(t){Object.assign(this,t)}getTypeName(){return"UpdateBooking"}getMethod(){return"PATCH"}createResponse(){return new P}}class N extends D{constructor(t){super(t),Object.assign(this,t)}getTypeName(){return"QueryBookings"}getMethod(){return"GET"}createResponse(){return new I}}const U=["onSubmit"],j={class:"shadow sm:overflow-hidden sm:rounded-md"},O={class:"space-y-6 py-6 px-4 sm:p-6 bg-white dark:bg-black"},M=s("div",null,[s("h3",{class:"text-lg font-medium leading-6 text-gray-900 dark:text-gray-100"}," Change an existing Room Booking "),s("p",{class:"notes mt-1 text-sm text-gray-500 dark:text-gray-400"},[n(" Find out how to quickly create a "),s("a",{class:"svg-external",target:"_blank",href:"https://youtu.be/rSFiikDjGos"}," C# Bookings App from Scratch ")])],-1),G={class:"bg-gray-50 dark:bg-gray-800 px-4 py-3 text-right sm:px-12"},Q=T({__name:"Fields",setup(l){const{toFormValues:t}=b(),e=B();let y=v(),o=v();async function g(k){y.value=await e.api(o.value)}return F(async()=>{let k=await e.api(new N({id:1}));k.succeeded&&(o.value=new E(t(k.response.results[0])))}),(k,c)=>{const _=u("AutoFormFields"),m=u("PrimaryButton");return r(o)?(f(),w("form",{key:0,onSubmit:C(g,["prevent"])},[s("div",j,[s("div",O,[M,a(_,{modelValue:r(o),"onUpdate:modelValue":c[0]||(c[0]=i=>q(o)?o.value=i:o=i),api:r(y)},null,8,["modelValue","api"])]),s("div",G,[a(m,null,{default:p(()=>[n("Save")]),_:1})])])],40,U)):S("",!0)}}}),H=s("link",{rel:"stylesheet",href:"/css/tailwind-components.css"},null,-1),z=d(`<p class="mb-4 text-lg"><code>AutoCreateForm</code> can be used to create an automated form based on a Request DTO definition: </p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoCreateForm</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>CreateBooking<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div><iframe src="/gallery/autoform/new.html" class="w-full border-none h-[44em] w-[1330px] -ml-40"></iframe>`,3),L={class:"my-4 text-lg"},$=d(`<p class="my-4 text-lg"> By default Auto Forms are rendered in a <code>SlideOver</code> dialog, alternatively they can be rendered in a traditional inline Form with <code>card</code> formStyle option, e.g: </p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoCreateForm</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>CreateBooking<span class="token punctuation">&quot;</span></span> <span class="token attr-name">formStyle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div>`,2),W={class:"py-8"},J={class:"mb-4 text-lg"},K=s("code",null,"AutoEditForm",-1),X=s("b",null,"heading",-1),Y=s("b",null,"sub-heading",-1),Z=d(`<div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoEditForm</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>booking<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UpdateBooking<span class="token punctuation">&quot;</span></span> <span class="token attr-name">deleteType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>DeleteBooking<span class="token punctuation">&quot;</span></span> 
    <span class="token attr-name">heading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Change an existing Room Booking<span class="token punctuation">&quot;</span></span> <span class="token attr-name">sub-heading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Manage reservations for MyApp hotels.<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div><iframe src="/gallery/autoform/edit.html" class="w-full border-none h-[44em] w-[1330px] -ml-40"></iframe><p class="my-4 text-lg"> The same form rendered in a traditional inline form with a <b>card</b> formStyle with some more advanced customization examples using rich markup in custom <code>&lt;template #heading&gt;</code> and <code>&lt;template #sub-heading&gt;</code> slots: </p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoEditForm</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>booking<span class="token punctuation">&quot;</span></span> <span class="token attr-name">formStyle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UpdateBooking<span class="token punctuation">&quot;</span></span> <span class="token attr-name">deleteType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>DeleteBooking<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#heading</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-xl font-semibold text-green-600<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Change an existing Room Booking<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#sub-heading</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
      Here are some 
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextLink</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://youtu.be/rSFiikDjGos<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>good tips on making room reservations 
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Icon</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>inline-block<span class="token punctuation">&#39;</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lucide:external-link<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TextLink</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>AutoEditForm</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>`,4),nn=s("h3",{class:"text-xl font-semibold text-green-600"},"Change an existing Room Booking",-1),an={class:"my-8 text-lg"},sn=d(`<div class="language-csharp"><pre><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Description</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Update an existing Booking&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Notes</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Find out how to quickly create a &lt;a class=&#39;svg-external&#39; target=&#39;_blank&#39; href=&#39;https://youtu.be/rSFiikDjGos&#39;&gt;C# Bookings App from Scratch&lt;/a&gt;&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Route</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;/booking/{Id}&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;PATCH&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ValidateHasRole</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Employee&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">AutoApply</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Behavior<span class="token punctuation">.</span>AuditModify<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UpdateBooking</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IPatchDb<span class="token punctuation">&lt;</span>Booking<span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">IReturn<span class="token punctuation">&lt;</span>IdResponse<span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">RoomType<span class="token punctuation">?</span></span> RoomType <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ValidateGreaterThan</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span><span class="token punctuation">?</span></span> RoomNumber <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ValidateGreaterThan</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">decimal</span><span class="token punctuation">?</span></span> Cost <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime<span class="token punctuation">?</span></span> BookingStartDate <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime<span class="token punctuation">?</span></span> BookingEndDate <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Input</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Type <span class="token operator">=</span> <span class="token string">&quot;textarea&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> Notes <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span><span class="token punctuation">?</span></span> Cancelled <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Where they can be used to customize Auto Form&#39;s appearance from annotations on C# Server DTOs:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoEditForm</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>booking<span class="token punctuation">&quot;</span></span> <span class="token attr-name">formStyle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UpdateBooking<span class="token punctuation">&quot;</span></span> <span class="token attr-name">deleteType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>DeleteBooking<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div>`,3),tn=d(`<p class="mb-4 text-lg"> For more advanced customization of a Forms appearance and behavior, <code>AutoFormFields</code> can be used to just render the Form&#39;s fields (with validation binding) inside a custom Form which can submit the data-bound populated Request DTO to invoke the API, e.g: </p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>request<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@submit.prevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>shadow sm:overflow-hidden sm:rounded-md<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>space-y-6 py-6 px-4 sm:p-6 bg-white dark:bg-black<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-lg font-medium leading-6 text-gray-900 dark:text-gray-100<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                    Change an existing Room Booking
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>notes mt-1 text-sm text-gray-500 dark:text-gray-400<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                    Find out how to quickly create a 
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>svg-external<span class="token punctuation">&#39;</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>_blank<span class="token punctuation">&#39;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>https://youtu.be/rSFiikDjGos<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>
                        C# Bookings App from Scratch
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoFormFields</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>request<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:api</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>api<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-gray-50 dark:bg-gray-800 px-4 py-3 text-right sm:px-12<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PrimaryButton</span><span class="token punctuation">&gt;</span></span>Save<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>PrimaryButton</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ApiResponse <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@servicestack/client&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useClient <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@servicestack/vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> QueryBookings<span class="token punctuation">,</span> UpdateBooking <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../dtos&#39;</span>

<span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token function">useClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> api <span class="token operator">=</span> ref<span class="token operator">&lt;</span>ApiResponse<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> request <span class="token operator">=</span> ref<span class="token operator">&lt;</span>UpdateBooking<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">submit</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">e</span><span class="token operator">:</span>Event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    api<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">api</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>value<span class="token operator">!</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> api <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">api</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">QueryBookings</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>api<span class="token punctuation">.</span>succeeded<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        request<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UpdateBooking</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span>response<span class="token operator">!</span><span class="token punctuation">.</span>results<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>`,2),un='{"title":"Auto Form Components","description":"","frontmatter":{"title":"Auto Form Components"},"headers":[],"relativePath":"vue/gallery/autoform.md"}',pn={},kn=Object.assign(pn,{__name:"autoform",setup(l){const{load:t}=b();t(R);const e=A[0];return v(!1),(y,o)=>{const g=u("Breadcrumb"),k=u("Breadcrumbs"),c=u("TextLink"),_=u("AutoCreateForm"),m=u("AutoEditForm");return f(),w("div",null,[H,a(k,{class:"mt-4","home-href":"/vue/"},{default:p(()=>[a(g,{href:"/vue/gallery/"},{default:p(()=>[n("gallery")]),_:1}),a(g,null,{default:p(()=>[n("Auto Form Examples")]),_:1})]),_:1}),a(h,{class:"pt-8",Component:"AutoCreateForm"},{default:p(()=>[n("Create Form")]),_:1}),z,s("p",L,[n(" These Auto Forms are powered by the rich "),a(c,{href:"/vue/use-metadata"},{default:p(()=>[n("App Metadata")]),_:1}),n(" surrounding your APIs, which contain all the necessary metadata to invoke the API and bind any contextual validation errors adjacent to the invalid field inputs. ")]),$,s("div",W,[a(_,{class:"mx-auto max-w-3xl",type:"CreateBooking",formStyle:"card"})]),a(h,{Component:"AutoEditForm"},{default:p(()=>[n("Edit Form")]),_:1}),s("p",J,[K,n(" can be used to render an automated form based on update and delete "),a(c,{href:"/autoquery-crud"},{default:p(()=>[n("AutoQuery CRUD")]),_:1}),n(" APIs which also makes use of "),X,n(" and "),Y,n(" customization options: ")]),Z,a(m,{class:"mx-auto max-w-3xl",modelValue:r(e),"onUpdate:modelValue":o[0]||(o[0]=i=>q(e)?e.value=i:null),formStyle:"card",type:"UpdateBooking",deleteType:"DeleteBooking"},{heading:p(()=>[nn]),"sub-heading":p(()=>[s("p",null,[n("Here are some "),a(c,{href:"https://youtu.be/rSFiikDjGos"},{default:p(()=>[n("good tips on making room reservations "),a(r(x),{class:"inline-block",icon:"lucide:external-link"})]),_:1})])]),_:1},8,["modelValue"]),s("p",an,[n(" The forms behavior and appearance is further customizable with the "),a(c,{href:"/locode/declarative#annotate-apis"},{default:p(()=>[n("API annotation")]),_:1}),n(", declarative "),a(c,{href:"/locode/declarative#type-validation-attributes"},{default:p(()=>[n("validation")]),_:1}),n(" and the custom "),a(c,{href:"/locode/declarative#custom-fields-and-inputs"},{default:p(()=>[n("Field and Input")]),_:1}),n(" attributes, e.g: ")]),sn,a(m,{class:"mx-auto max-w-3xl",modelValue:r(e),"onUpdate:modelValue":o[1]||(o[1]=i=>q(e)?e.value=i:null),formStyle:"card",type:"UpdateBooking",deleteType:"DeleteBooking"},null,8,["modelValue"]),a(h,{Component:"AutoFormFields"},{default:p(()=>[n("Form Fields")]),_:1}),tn,s("div",null,[a(Q,{class:"mx-auto max-w-screen-md"})])])}}});export{un as __pageData,kn as default};
